{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azsazhel\\\\OneDrive\\\\Desktop\\\\projects\\\\Chat-Application\\\\frontend\\\\src\\\\pages\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Col, Container, Form, Row, Button } from 'react-bootstrap';\nimport { useSignupUserMutation } from '../services/appApi';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Signup.css';\nimport botImg from '../assets/bot.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [signupUser, {\n    isLoading,\n    error\n  }] = useSignupUserMutation();\n  const navigate = useNavigate(); //image upload states\n\n  const [image, setImage] = useState(null);\n  const [upladingImg, setUploadingImg] = useState(false);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  function validateImg(e) {\n    const file = e.target.files[0];\n\n    if (file.size >= 1048576) {\n      return alert('Max file size is 1mb');\n    } else {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  }\n\n  async function uploadImage() {\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'your-preset-here');\n\n    try {\n      setUploadingImg(true);\n      let res = await fetch('https://api.cloudinary.com/v1_1/your-username-here/image/upload', {\n        method: 'post',\n        body: data\n      });\n      const urlData = await res.json();\n      setUploadingImg(false);\n      return urlData.url;\n    } catch (error) {\n      setUploadingImg(false);\n      console.log(error);\n    }\n  }\n\n  async function handleSignup(e) {\n    e.preventDefault();\n    if (!image) return alert('Please upload your profile picture');\n    const url = await uploadImage(image);\n    console.log(url); // signup the user\n\n    signupUser({\n      name,\n      email,\n      password,\n      picture: url\n    }).then(_ref => {\n      let {\n        data\n      } = _ref;\n\n      if (data) {\n        console.log(data);\n        navigate('/chat');\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"d-flex align-items-center justify-content-center flex-direction-column\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            width: '80%',\n            maxWidth: 500\n          },\n          onSubmit: handleSignup,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Create account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-profile-pic__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePreview || botImg,\n              className: \"signup-profile-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image-upload\",\n              className: \"image-upload-label\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus-circle add-picture-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image-upload\",\n              hidden: true,\n              accept: \"image/png, image/jpeg\",\n              onChange: validateImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert alert-danger\",\n            children: error.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Your name\",\n              onChange: e => setName(e.target.value),\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => setEmail(e.target.value),\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value),\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: upladingImg || isLoading ? 'Signing you up...' : 'Signup'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: [\"Already have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"signup__bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"rskEo1Jy1jI1iWTncpwb2PeG1m0=\", false, function () {\n  return [useSignupUserMutation, useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Azsazhel/OneDrive/Desktop/projects/Chat-Application/frontend/src/pages/Signup.js"],"names":["React","useState","Col","Container","Form","Row","Button","useSignupUserMutation","Link","useNavigate","botImg","Signup","email","setEmail","password","setPassword","name","setName","signupUser","isLoading","error","navigate","image","setImage","upladingImg","setUploadingImg","imagePreview","setImagePreview","validateImg","e","file","target","files","size","alert","URL","createObjectURL","uploadImage","data","FormData","append","res","fetch","method","body","urlData","json","url","console","log","handleSignup","preventDefault","picture","then","width","maxWidth","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Col, Container, Form, Row, Button } from 'react-bootstrap';\nimport { useSignupUserMutation } from '../services/appApi';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Signup.css';\nimport botImg from '../assets/bot.png';\n\nfunction Signup() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [signupUser, { isLoading, error }] = useSignupUserMutation();\n  const navigate = useNavigate();\n  //image upload states\n  const [image, setImage] = useState(null);\n  const [upladingImg, setUploadingImg] = useState(false);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  function validateImg(e) {\n    const file = e.target.files[0];\n    if (file.size >= 1048576) {\n      return alert('Max file size is 1mb');\n    } else {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  }\n\n  async function uploadImage() {\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'your-preset-here');\n    try {\n      setUploadingImg(true);\n      let res = await fetch(\n        'https://api.cloudinary.com/v1_1/your-username-here/image/upload',\n        {\n          method: 'post',\n          body: data,\n        }\n      );\n      const urlData = await res.json();\n      setUploadingImg(false);\n      return urlData.url;\n    } catch (error) {\n      setUploadingImg(false);\n      console.log(error);\n    }\n  }\n\n  async function handleSignup(e) {\n    e.preventDefault();\n    if (!image) return alert('Please upload your profile picture');\n    const url = await uploadImage(image);\n    console.log(url);\n    // signup the user\n    signupUser({ name, email, password, picture: url }).then(({ data }) => {\n      if (data) {\n        console.log(data);\n        navigate('/chat');\n      }\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col\n          md={6}\n          className=\"d-flex align-items-center justify-content-center flex-direction-column\"\n        >\n          <Form style={{ width: '80%', maxWidth: 500 }} onSubmit={handleSignup}>\n            <h1 className=\"text-center\">Create account</h1>\n            <div className=\"signup-profile-pic__container\">\n              <img\n                src={imagePreview || botImg}\n                className=\"signup-profile-pic\"\n              />\n              <label htmlFor=\"image-upload\" className=\"image-upload-label\">\n                <i className=\"fas fa-plus-circle add-picture-icon\"></i>\n              </label>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                hidden\n                accept=\"image/png, image/jpeg\"\n                onChange={validateImg}\n              />\n            </div>\n            {error && <p className=\"alert alert-danger\">{error.data}</p>}\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Your name\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              {upladingImg || isLoading ? 'Signing you up...' : 'Signup'}\n            </Button>\n            <div className=\"py-4\">\n              <p className=\"text-center\">\n                Already have an account ? <Link to=\"/login\">Login</Link>\n              </p>\n            </div>\n          </Form>\n        </Col>\n        <Col md={6} className=\"signup__bg\"></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}